{"version":3,"mappings":"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","names":["NAMESPACE","scopeId","hostTagName","isSvgMode","queuePending","createTime","fnName","tagName","uniqueTime","key","measureText","HYDRATED_CSS","EMPTY_OBJ","isDef","v","isComplexType","o","queryNonceMetaTagContent","doc","_a","_b","_c","h","nodeName","vnodeData","children","child","simple","lastSimple","vNodeChildren","walk","c","i","newVNode","classData","k","vnode","tag","text","Host","isHost","node","emitEvent","elm","name","opts","ev","plt","rootAppliedStyles","registerStyle","cssText","allowCS","style","styles","supportsConstructableStylesheets","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","appliedStyles","styleElm","nonce","attachStyles","hostRef","flags","endAttachStyles","cmp","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","classList","oldClasses","parseClassList","newClasses","isComplex","n","parseClassListRegex","value","updateElement","oldVnode","newVnode","oldVnodeAttrs","newVnodeAttrs","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","patch","oldVNode","newChildren","renderVdom","renderFnResults","rootVnode","attachToAncestor","ancestorComponent","r","scheduleUpdate","isInitialLoad","writeTask","dispatchHooks","endSchedule","instance","promise","then","updateComponent","endUpdate","rc","endRender","callRender","cb","childrenPromises","postUpdate","postUpdateComponent","e","consoleError","endPostUpdate","addHydratedFlag","appDidLoad","nextTick","who","win","thenFn","proxyComponent","Cstr","initializeComponent","hmrVersionId","loadModule","endLoad","endNewInstance","endRegisterStyles","schedule","connectedCallback","getHostRef","endConnected","disconnectedCallback","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","head","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","lazyBundle","compactMeta","HostElement","self","registerHost","host","hostRefs","ref","registerInstance","lazyInstance","el","cmpModules","exportName","bundleId","module","__variableDynamicImportRuntimeHelper","importedModule","eventName","listener","promiseResolve","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","patchEsm","defineCustomElements","a","decorators","Story","storyContext","jsx","addonStatus","previewTabs","parameters"],"sources":["../../../web-components-stencil/dist/esm/index-91bbf77a.js","../../../web-components-stencil/dist/esm/loader.js","../../../web-components-stencil/loader/index.js","../../config/preview.tsx"],"sourcesContent":["const NAMESPACE = 'example';\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/snabbdom/snabbdom/blob/master/LICENSE\n *\n * Modified for Stencil's renderer and slot projection\n */\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nlet queuePending = false;\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\nconst isDef = (v) => v != null;\n/**\n * Check whether a value is a 'complex type', defined here as an object or a\n * function.\n *\n * @param o the value to check\n * @returns whether it's a complex type or not\n */\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let simple = false;\n    let lastSimple = false;\n    const vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    return vnode;\n};\n/**\n * A utility function for creating a virtual DOM node from a tag and some\n * possible text content.\n *\n * @param tag the tag for this element\n * @param text possible text content for the node\n * @returns a newly-minted virtual DOM node\n */\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\n/**\n * Check whether a given node is a Host node or not\n *\n * @param node the virtual DOM node to check\n * @returns whether it's a Host node or not\n */\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst rootAppliedStyles = /*@__PURE__*/ new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructableStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        if (typeof style === 'string') {\n            style = cssText;\n        }\n        else {\n            style.replaceSync(cssText);\n        }\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    var _a;\n    let scopeId = getScopeId(cmpMeta);\n    const style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n                    {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    // Apply CSP nonce to the style tag if it exists\n                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                    if (nonce != null) {\n                        styleElm.setAttribute('nonce', nonce);\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n    // TODO(STENCIL-662): Remove code related to deprecated shadowDomShim field\n    if (flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (cmp.$tagName$);\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        memberName.toLowerCase();\n        if (memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        const n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\n/**\n * Create a DOM Node corresponding to one of the children of a given VNode.\n *\n * @param oldParentVNode the parent VNode from the previous render\n * @param newParentVNode the parent VNode from the current render\n * @param childIndex the index of the VNode, in the _new_ parent node's\n * children, for which we will create a new DOM node\n * @param parentElm the parent DOM node which our new node will be a child of\n * @returns the newly created node\n */\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    const newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    {\n        // create element\n        elm = newVNode.$elm$ = (doc.createElement(newVNode.$tag$));\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n    }\n    return elm;\n};\n/**\n * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and\n * add them to the DOM in the appropriate place.\n *\n * @param parentElm the DOM node which should be used as a parent for the new\n * DOM nodes\n * @param before a child of the `parentElm` which the new children should be\n * inserted before (optional)\n * @param parentVNode the parent virtual DOM node\n * @param vnodes the new child virtual DOM nodes to produce DOM nodes for\n * @param startIdx the index in the child virtual DOM nodes at which to start\n * creating DOM nodes (inclusive)\n * @param endIdx the index in the child virtual DOM nodes at which to stop\n * creating DOM nodes (inclusive)\n */\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = (parentElm);\n    let childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, before);\n            }\n        }\n    }\n};\n/**\n * Handle reconciling an outdated VNode with a new one which corresponds to\n * it. This function handles flushing updates to the DOM and reconciling the\n * children of the two nodes (if any).\n *\n * @param oldVNode an old VNode whose DOM element and children we want to update\n * @param newVNode a new VNode representing an updated version of the old one\n */\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    {\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (newChildren !== null) {\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else ;\n    }\n};\n/**\n * The main entry point for Stencil's virtual DOM-based rendering engine\n *\n * Given a {@link d.HostRef} container and some virtual DOM nodes, this\n * function will handle creating a virtual DOM tree with a single root, patching\n * the current virtual DOM tree onto an old one (if any), dealing with slot\n * relocation, and reflecting attributes.\n *\n * @param hostRef data needed to root and render the virtual DOM tree, such as\n * the DOM node into which it should be rendered.\n * @param renderFnResults the virtual DOM nodes to be rendered\n */\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    if (hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return writeTask(dispatch) ;\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = hostRef.$lazyInstance$ ;\n    let promise;\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        callRender(hostRef, instance);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (hostRef, instance, elm) => {\n    try {\n        instance = instance.render() ;\n        {\n            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;\n        }\n        {\n            {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                {\n                    renderVdom(hostRef, instance);\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    return null;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => elm.classList.add('hydrated')\n    ;\n/**\n * Attach a series of runtime constructs to a compiled Stencil component\n * constructor, including getters and setters for the `@Prop` and `@State`\n * decorators, callbacks for when attributes change, and so on.\n *\n * @param Cstr the constructor for a component that we need to process\n * @param cmpMeta metadata collected previously about the component\n * @param flags a number used to store a series of bit flags\n * @returns a reference to the same constructor passed in (but now mutated)\n */\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {\n        {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            endNewInstance();\n        }\n        if (Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            const scopeId = getScopeId(cmpMeta);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        endConnected();\n    }\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        getHostRef(elm);\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    var _a;\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            const tagName = cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        {\n                            {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement));\n            }\n        });\n    });\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        // Apply CSP nonce to the style tag if it exists\n        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n        if (nonce != null) {\n            visibilityStyle.setAttribute('nonce', nonce);\n        }\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\n/**\n * Assigns the given value to the nonce property on the runtime platform object.\n * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.\n * @param nonce The value to be assigned to the platform nonce property.\n * @returns void\n */\nconst setNonce = (nonce) => (plt.$nonce$ = nonce);\nconst hostRefs = /*@__PURE__*/ new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (0, console.error)(e, el);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    const module = cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n    return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${''}`).then((importedModule) => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = /*@__PURE__*/ new Map();\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructableStylesheets = /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replaceSync === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n\nexport { bootstrapLazy as b, h, promiseResolve as p, registerInstance as r, setNonce as s };\n\n//# sourceMappingURL=index-91bbf77a.js.map","import { p as promiseResolve, b as bootstrapLazy } from './index-91bbf77a.js';\nexport { s as setNonce } from './index-91bbf77a.js';\n\n/*\n Stencil Client Patch Esm v3.2.0 | MIT Licensed | https://stenciljs.com\n */\nconst patchEsm = () => {\n    return promiseResolve();\n};\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return Promise.resolve();\n  return patchEsm().then(() => {\n  return bootstrapLazy([[\"example-button\",[[1,\"example-button\"]]]], options);\n  });\n};\n\nexport { defineCustomElements };\n\n//# sourceMappingURL=loader.js.map","\n(function(){if(\"undefined\"!==typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)};HTMLElement.prototype=a.prototype;HTMLElement.prototype.constructor=HTMLElement;Object.setPrototypeOf(HTMLElement,a)}})();\nexport * from '../dist/esm/polyfills/index.js';\nexport * from '../dist/esm/loader.js';\n","import '@example/design-tokens/dist/index.css';\nimport '@example/font/src/index.scss';\n\nimport { defineCustomElements } from '@example/web-components-stencil/loader/index.js';\n\ndefineCustomElements();\n\nexport const decorators = [\n  // Enable `utrecht-document` component as backdrop\n  // Enable `utrecht-theme` to configure the design tokens\n  // Ensure old html templates will be rendered as react component\n  (Story, storyContext) => {\n    // Hack to make current args for a story available in the transformSource of the docs addon\n    storyContext.parameters.args = storyContext.args;\n\n    return (\n      <div className=\"example-theme\">\n        <Story />\n      </div>\n    );\n  },\n];\n\n// Configure @etchteam/storybook-addon-status\nconst addonStatus = {\n  status: {\n    statuses: {\n      PRODUCTION: {\n        background: '#088008',\n        color: '#ffffff',\n        description:\n          'Used in production in a variety of situations, well tested, stable APIs, mostly patches and minor releases.',\n      },\n      BETA: {\n        background: '#3065ee',\n        color: '#ffffff',\n        description:\n          'Used in production in a specific situation, evolving APIs based on feedback, breaking changes are still likely.',\n      },\n      ALPHA: {\n        background: '#e0bc2e',\n        color: '#000000',\n        description:\n          'Used in prototypes and in projects that are still in development, breaking changes occur frequently and are not communicated.',\n      },\n      'WORK IN PROGRESS': {\n        background: '#cc0000',\n        color: '#ffffff',\n        description:\n          'Do not use in production. Does not follow semantic versioning and any published packages are for internal use only.',\n      },\n    },\n  },\n};\n\nconst previewTabs = {\n  'storybookjs/notes/panel': { title: 'Documentation' },\n  'storybook/docs/panel': { title: 'API' },\n  canvas: { title: 'Design Tokens' },\n};\n\nexport const parameters = {\n  controls: { expanded: false },\n  previewTabs,\n  addonStatus,\n  options: {\n    panelPosition: 'right',\n  },\n};\n"],"file":"assets/preview-bbbdc7cb.js"}