name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

  lint:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: lint"
        run: pnpm run --if-present lint

  build:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Configure Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: build"
        env:
          BASE_URL: "/utrecht/"
        run: pnpm run --if-present build

      - name: "Continuous Integration: lint build"
        env:
          BASE_URL: "/utrecht/"
        run: pnpm run --if-present lint-build

      - name: "Continuous Integration: test build"
        env:
          BASE_URL: "/utrecht/"
        run: pnpm run --if-present test-build

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: packages/storybook/dist/

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: "Continuous Integration: test"
        run: pnpm run --if-present test

  publish-website:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deploy-pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  publish-npm:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' && github.repository != 'nl-design-system/example'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm package manager
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: "Continuous Deployment: install"
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

      - name: "Continuous Deployment: build"
        run: pnpm run --if-present build

      - name: "Continuous Deployment: publish to the NPM repository"
        uses: changesets/action@c8bada60c408975afd1a20b3db81d6eee6789308 # v1.4.9
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          commit: "docs(release): design system packages"
          setupGitUser: false
          title: "docs(release): design system packages"
          publish: "pnpm run publish:changeset"
